{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/planner/client/src/components/profile/student_profile/StudentProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentProfile = () => {\n  _s();\n  const {\n    srn\n  } = useParams();\n  const [studentData, setStudentData] = useState([]);\n  const [aboutData, setAboutData] = useState({\n    mailId: '',\n    phoneNumber: '',\n    cgpa: '',\n    semester: '',\n    section: ''\n  });\n  const [clubData, setClubData] = useState({\n    clubName: '',\n    designation: ''\n  });\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\n  const [isEditingClub, setIsEditingClub] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + srn);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleInputChangeAbout = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAboutData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleInputChange = (e, section) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (section === 'about') {\n      setAboutData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    } else if (section === 'club') {\n      setClubData(prevData => ({\n        ...prevData,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = (e, section) => {\n    e.preventDefault();\n    // Add logic here to update the data using axios or any other method\n    if (section === 'about') {\n      setIsEditingAbout(false);\n    } else if (section === 'club') {\n      setIsEditingClub(false);\n    }\n  };\n  const handleEdit = section => {\n    if (section === 'about') {\n      setIsEditingAbout(true);\n    } else if (section === 'club') {\n      setIsEditingClub(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StudentHeading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), studentData.map((srn, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-title-1\",\n          children: [srn.fname, \" \", srn.lname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-student-srn\",\n          children: srn.srn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-about\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-title\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-section-rect\",\n          children: studentData.map((srn, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-about-content\",\n            children: !isEditingAbout ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Mail ID: \", srn.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Phone number: \", srn.phno]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"CGPA: \", srn.cgpa]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Semester: \", srn.semester]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Section: \", srn.section]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit('about'),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => handleSubmit(e, 'about'),\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Mail ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"mailId\",\n                  value: aboutData.mailId,\n                  onChange: handleInputChangeAbout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Phone number:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"phoneNumber\",\n                  value: aboutData.phoneNumber,\n                  onChange: handleInputChangeAbout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"CGPA:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"cgpa\",\n                  value: aboutData.cgpa,\n                  onChange: handleInputChangeAbout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Semester:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"semester\",\n                  value: aboutData.semester,\n                  onChange: handleInputChangeAbout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Section:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"section\",\n                  value: aboutData.section,\n                  onChange: handleInputChangeAbout\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-about\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-title\",\n          children: \"Club Membership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-section-rect\",\n          children: !isEditingClub ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Club Name: \", clubData.clubName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Designation: \", clubData.designation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit('club'),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleSubmit(e, 'club'),\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Club Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"clubName\",\n                value: clubData.clubName,\n                onChange: e => handleInputChange(e, 'club'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Designation:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"designation\",\n                value: clubData.designation,\n                onChange: e => handleInputChange(e, 'club'),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StudentProfile, \"fY7CkHE2WtDhw8IT5QGpFmu4N0c=\", false, function () {\n  return [useParams];\n});\n_c = StudentProfile;\nexport default StudentProfile;\n\n/*\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\n\nconst StudentProfile = () => {\n  const { srn } = useParams();\n\n  const [studentData, setStudentData] = useState([]);\n  const [aboutData, setAboutData] = useState({\n    mailId: '',\n    phoneNumber: '',\n    cgpa: '',\n    semester: '',\n    section: '',\n  });\n  const [clubData, setClubData] = useState({\n    clubName: '',\n    designation: '',\n  });\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\n  const [isEditingClub, setIsEditingClub] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + srn);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleInputChangeAbout = (e) => {\n    const { name, value } = e.target;\n    setAboutData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleInputChange = (e, section) => {\n    const { name, value } = e.target;\n    if (section === 'about') {\n      setAboutData((prevData) => ({ ...prevData, [name]: value }));\n    } else if (section === 'club') {\n      setClubData((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e, section) => {\n    e.preventDefault();\n    // Add logic here to update the data using axios or any other method\n    if (section === 'about') {\n      setIsEditingAbout(false);\n    } else if (section === 'club') {\n      setIsEditingClub(false);\n    }\n  };\n\n  const handleEdit = (section) => {\n    if (section === 'about') {\n      setIsEditingAbout(true);\n    } else if (section === 'club') {\n      setIsEditingClub(true);\n    }\n  };\n\n  return (\n    <>\n      <StudentHeading />\n      <div className='profile-banner'>\n        <div className='profile-image'></div>\n        {studentData.map((student, index) => (\n          <div className='profile-heading' key={index}>\n            <p className='profile-title-1'>{student.fname} {student.lname}</p>\n            <p className='profile-student-srn'>{student.srn}</p>\n          </div>\n        ))}\n      </div>\n      <div className='student-profile-details'>\n        <div className='student-about'>\n          <p className='profile-title'>About</p>\n          <div className='profile-section-rect'>\n            {studentData.map((student, index) => (\n              <div className='profile-about-content' key={index}>\n                {!isEditingAbout ? (\n                  <>\n                    <p>Mail ID: {student.email}</p>\n                    <p>Phone number: {student.phno}</p>\n                    <p>CGPA: {student.cgpa}</p>\n                    <p>Semester: {student.semester}</p>\n                    <p>Section: {student.section}</p>\n                    <button onClick={() => handleEdit('about')}>Edit</button>\n                  </>\n                ) : (\n                  <form onSubmit={(e) => handleSubmit(e, 'about')}>\n                    <label>\n                      Mail ID:\n                      <input\n                        type=\"email\"\n                        name=\"mailId\"\n                        value={aboutData.mailId}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Phone number:\n                      <input\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        value={aboutData.phoneNumber}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      CGPA:\n                      <input\n                        type=\"text\"\n                        name=\"cgpa\"\n                        value={aboutData.cgpa}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Semester:\n                      <input\n                        type=\"text\"\n                        name=\"semester\"\n                        value={aboutData.semester}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Section:\n                      <input\n                        type=\"text\"\n                        name=\"section\"\n                        value={aboutData.section}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <button type=\"submit\">Submit</button>\n                  </form>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className='student-about'>\n          <p className='profile-title'>Club Membership</p>\n          <div className='profile-section-rect'>\n            {!isEditingClub ? (\n              <div>\n                <p>\n                  Club Name: {clubData.clubName}\n                </p>\n                <p>\n                  Designation: {clubData.designation}\n                </p>\n                <button onClick={() => handleEdit('club')}>Edit</button>\n              </div>\n            ) : (\n              <form onSubmit={(e) => handleSubmit(e, 'club')}>\n                <label>\n                  Club Name:\n                  <input\n                    type=\"text\"\n                    name=\"clubName\"\n                    value={clubData.clubName}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <label>\n                  Designation:\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={clubData.designation}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default \n*/\nvar _c;\n$RefreshReg$(_c, \"StudentProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","StudentHeading","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentProfile","_s","srn","studentData","setStudentData","aboutData","setAboutData","mailId","phoneNumber","cgpa","semester","section","clubData","setClubData","clubName","designation","isEditingAbout","setIsEditingAbout","isEditingClub","setIsEditingClub","fetchData","studentDetails","get","data","error","console","handleInputChangeAbout","e","name","value","target","prevData","handleInputChange","handleSubmit","preventDefault","handleEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","fname","lname","email","phno","onClick","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/planner/client/src/components/profile/student_profile/StudentProfile.jsx"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\n\nconst StudentProfile = () => {\n  const { srn } = useParams();\n\n  const [studentData, setStudentData] = useState([]);\n  const [aboutData, setAboutData] = useState({\n    mailId: '',\n    phoneNumber: '',\n    cgpa: '',\n    semester: '',\n    section: '',\n  });\n  const [clubData, setClubData] = useState({\n    clubName: '',\n    designation: '',\n  });\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\n  const [isEditingClub, setIsEditingClub] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + srn);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleInputChangeAbout = (e) => {\n    const { name, value } = e.target;\n    setAboutData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleInputChange = (e, section) => {\n    const { name, value } = e.target;\n    if (section === 'about') {\n      setAboutData((prevData) => ({ ...prevData, [name]: value }));\n    } else if (section === 'club') {\n      setClubData((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e, section) => {\n    e.preventDefault();\n    // Add logic here to update the data using axios or any other method\n    if (section === 'about') {\n      setIsEditingAbout(false);\n    } else if (section === 'club') {\n      setIsEditingClub(false);\n    }\n  };\n\n  const handleEdit = (section) => {\n    if (section === 'about') {\n      setIsEditingAbout(true);\n    } else if (section === 'club') {\n      setIsEditingClub(true);\n    }\n  };\n\n  return (\n    <>\n      <StudentHeading />\n      <div className='profile-banner'>\n        <div className='profile-image'></div>\n        {studentData.map((srn, index) => (\n          <div className='profile-heading' key={index}>\n            <p className='profile-title-1'>{srn.fname} {srn.lname}</p>\n            <p className='profile-student-srn'>{srn.srn}</p>\n          </div>\n        ))}\n      </div>\n      <div className='student-profile-details'>\n        <div className='student-about'>\n          <p className='profile-title'>About</p>\n          <div className='profile-section-rect'>\n            {studentData.map((srn, index) => (\n              <div className='profile-about-content' key={index}>\n                {!isEditingAbout ? (\n                  <>\n                    <p>Mail ID: {srn.email}</p>\n                    <p>Phone number: {srn.phno}</p>\n                    <p>CGPA: {srn.cgpa}</p>\n                    <p>Semester: {srn.semester}</p>\n                    <p>Section: {srn.section}</p>\n                    <button onClick={() => handleEdit('about')}>Edit</button>\n                  </>\n                ) : (\n                  <form onSubmit={(e) => handleSubmit(e, 'about')}>\n                    <label>\n                      Mail ID:\n                      <input\n                        type=\"email\"\n                        name=\"mailId\"\n                        value={aboutData.mailId}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Phone number:\n                      <input\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        value={aboutData.phoneNumber}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      CGPA:\n                      <input\n                        type=\"text\"\n                        name=\"cgpa\"\n                        value={aboutData.cgpa}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Semester:\n                      <input\n                        type=\"text\"\n                        name=\"semester\"\n                        value={aboutData.semester}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Section:\n                      <input\n                        type=\"text\"\n                        name=\"section\"\n                        value={aboutData.section}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <button type=\"submit\">Submit</button>\n                  </form>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className='student-about'>\n          <p className='profile-title'>Club Membership</p>\n          <div className='profile-section-rect'>\n            {!isEditingClub ? (\n              <div>\n                <p>\n                  Club Name: {clubData.clubName}\n                </p>\n                <p>\n                  Designation: {clubData.designation}\n                </p>\n                <button onClick={() => handleEdit('club')}>Edit</button>\n              </div>\n            ) : (\n              <form onSubmit={(e) => handleSubmit(e, 'club')}>\n                <label>\n                  Club Name:\n                  <input\n                    type=\"text\"\n                    name=\"clubName\"\n                    value={clubData.clubName}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <label>\n                  Designation:\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={clubData.designation}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default StudentProfile;\n\n/*\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\n\nconst StudentProfile = () => {\n  const { srn } = useParams();\n\n  const [studentData, setStudentData] = useState([]);\n  const [aboutData, setAboutData] = useState({\n    mailId: '',\n    phoneNumber: '',\n    cgpa: '',\n    semester: '',\n    section: '',\n  });\n  const [clubData, setClubData] = useState({\n    clubName: '',\n    designation: '',\n  });\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\n  const [isEditingClub, setIsEditingClub] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + srn);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleInputChangeAbout = (e) => {\n    const { name, value } = e.target;\n    setAboutData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleInputChange = (e, section) => {\n    const { name, value } = e.target;\n    if (section === 'about') {\n      setAboutData((prevData) => ({ ...prevData, [name]: value }));\n    } else if (section === 'club') {\n      setClubData((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e, section) => {\n    e.preventDefault();\n    // Add logic here to update the data using axios or any other method\n    if (section === 'about') {\n      setIsEditingAbout(false);\n    } else if (section === 'club') {\n      setIsEditingClub(false);\n    }\n  };\n\n  const handleEdit = (section) => {\n    if (section === 'about') {\n      setIsEditingAbout(true);\n    } else if (section === 'club') {\n      setIsEditingClub(true);\n    }\n  };\n\n  return (\n    <>\n      <StudentHeading />\n      <div className='profile-banner'>\n        <div className='profile-image'></div>\n        {studentData.map((student, index) => (\n          <div className='profile-heading' key={index}>\n            <p className='profile-title-1'>{student.fname} {student.lname}</p>\n            <p className='profile-student-srn'>{student.srn}</p>\n          </div>\n        ))}\n      </div>\n      <div className='student-profile-details'>\n        <div className='student-about'>\n          <p className='profile-title'>About</p>\n          <div className='profile-section-rect'>\n            {studentData.map((student, index) => (\n              <div className='profile-about-content' key={index}>\n                {!isEditingAbout ? (\n                  <>\n                    <p>Mail ID: {student.email}</p>\n                    <p>Phone number: {student.phno}</p>\n                    <p>CGPA: {student.cgpa}</p>\n                    <p>Semester: {student.semester}</p>\n                    <p>Section: {student.section}</p>\n                    <button onClick={() => handleEdit('about')}>Edit</button>\n                  </>\n                ) : (\n                  <form onSubmit={(e) => handleSubmit(e, 'about')}>\n                    <label>\n                      Mail ID:\n                      <input\n                        type=\"email\"\n                        name=\"mailId\"\n                        value={aboutData.mailId}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Phone number:\n                      <input\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        value={aboutData.phoneNumber}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      CGPA:\n                      <input\n                        type=\"text\"\n                        name=\"cgpa\"\n                        value={aboutData.cgpa}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Semester:\n                      <input\n                        type=\"text\"\n                        name=\"semester\"\n                        value={aboutData.semester}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Section:\n                      <input\n                        type=\"text\"\n                        name=\"section\"\n                        value={aboutData.section}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <button type=\"submit\">Submit</button>\n                  </form>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className='student-about'>\n          <p className='profile-title'>Club Membership</p>\n          <div className='profile-section-rect'>\n            {!isEditingClub ? (\n              <div>\n                <p>\n                  Club Name: {clubData.clubName}\n                </p>\n                <p>\n                  Designation: {clubData.designation}\n                </p>\n                <button onClick={() => handleEdit('club')}>Edit</button>\n              </div>\n            ) : (\n              <form onSubmit={(e) => handleSubmit(e, 'club')}>\n                <label>\n                  Club Name:\n                  <input\n                    type=\"text\"\n                    name=\"clubName\"\n                    value={clubData.clubName}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <label>\n                  Designation:\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={clubData.designation}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default \n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}