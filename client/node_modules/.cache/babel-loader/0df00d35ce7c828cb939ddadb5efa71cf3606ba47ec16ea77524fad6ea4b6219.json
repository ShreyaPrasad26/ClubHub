{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (values.institute === \"\") {\n    error.institute = \"*Field should not be empty\";\n  } else {\n    error.institute = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"*Field should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"*Email didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"*Field should not be empty\";\n  } else {\n    error.password = \"\";\n  }\n  if (values.repassword === \"\") {\n    error.repassword = \"*Field should not be empty\";\n  } else {\n    error.repassword = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","institute","email","test","password","repassword","_c","$RefreshReg$"],"sources":["/Users/shreyaprasad/Desktop/Coding /WebDev /planner/client/src/components/signup/admin_signup/AdminSignupValidation.js"],"sourcesContent":["function Validation(values) {\n    let error = {}\n\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    \n    if (values.institute === \"\"){\n        error.institute = \"*Field should not be empty\"\n    }\n\n    else {\n        error.institute =\"\"\n    }\n\n    if (values.email === \"\"){\n        error.email = \"*Field should not be empty\"\n    }\n\n    else if (!email_pattern.test(values.email)){\n        error.email = \"*Email didn't match\"\n    }\n\n    else {\n        error.email =\"\"\n    }\n\n    if (values.password === \"\"){\n        error.password = \"*Field should not be empty\"\n    }\n\n    else {\n        error.password =\"\"\n    }\n\n    if (values.repassword === \"\"){\n        error.repassword = \"*Field should not be empty\"\n    }\n\n    else {\n        error.repassword =\"\"\n    }\n\n    return error;\n}\n\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,MAAMC,aAAa,GAAG,4BAA4B;EAElD,IAAIF,MAAM,CAACG,SAAS,KAAK,EAAE,EAAC;IACxBF,KAAK,CAACE,SAAS,GAAG,4BAA4B;EAClD,CAAC,MAEI;IACDF,KAAK,CAACE,SAAS,GAAE,EAAE;EACvB;EAEA,IAAIH,MAAM,CAACI,KAAK,KAAK,EAAE,EAAC;IACpBH,KAAK,CAACG,KAAK,GAAG,4BAA4B;EAC9C,CAAC,MAEI,IAAI,CAACF,aAAa,CAACG,IAAI,CAACL,MAAM,CAACI,KAAK,CAAC,EAAC;IACvCH,KAAK,CAACG,KAAK,GAAG,qBAAqB;EACvC,CAAC,MAEI;IACDH,KAAK,CAACG,KAAK,GAAE,EAAE;EACnB;EAEA,IAAIJ,MAAM,CAACM,QAAQ,KAAK,EAAE,EAAC;IACvBL,KAAK,CAACK,QAAQ,GAAG,4BAA4B;EACjD,CAAC,MAEI;IACDL,KAAK,CAACK,QAAQ,GAAE,EAAE;EACtB;EAEA,IAAIN,MAAM,CAACO,UAAU,KAAK,EAAE,EAAC;IACzBN,KAAK,CAACM,UAAU,GAAG,4BAA4B;EACnD,CAAC,MAEI;IACDN,KAAK,CAACM,UAAU,GAAE,EAAE;EACxB;EAEA,OAAON,KAAK;AAChB;AAACO,EAAA,GA1CQT,UAAU;AA4CnB,eAAeA,UAAU;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}