{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const section_pattern = /^[A-Z]$/;\n  const cgpa_pattern = /^([1-9]|10)(\\.\\d{1,2})?$/;\n  const phno_pattern = /^[6-9]\\d{9}$/;\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (values.fname === \"\") {\n    error.fname = \"*Field should not be empty\";\n  } else {\n    error.fname = \"\";\n  }\n  if (values.lname === \"\") {\n    error.lname = \"*Field should not be empty\";\n  } else {\n    error.lname = \"\";\n  }\n  if (values.srn === \"\") {\n    error.srn = \"*Field should not be empty\";\n  } else {\n    error.srn = \"\";\n  }\n  if (values.semester === \"\") {\n    error.semester = \"*Field should not be empty\";\n  } else {\n    error.semester = \"\";\n  }\n  if (values.section === \"\") {\n    error.section = \"*Field should not be empty\";\n  } else if (!section_pattern.test(values.section)) {\n    error.section = \"*Section didn't match\";\n  } else {\n    error.section = \"\";\n  }\n  if (values.cgpa === \"\") {\n    error.cgpa = \"*Field should not be empty\";\n  } else if (!cgpa_pattern.test(values.cgpa)) {\n    error.cgpa = \"*CGPA didn't match\";\n  } else {\n    error.cgpa = \"\";\n  }\n  if (values.phno === \"\") {\n    error.phno = \"*Field should not be empty\";\n  } else if (!phno_pattern.test(values.phno)) {\n    error.phno = \"*Phone number didn't match\";\n  } else {\n    error.phno = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"*Field should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"*Email didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"*Field should not be empty\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","section_pattern","cgpa_pattern","phno_pattern","email_pattern","fname","lname","srn","semester","section","test","cgpa","phno","email","password","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/planner/client/src/components/signup/student_signup/StudentSignupValidation.js"],"sourcesContent":["function Validation(values) {\n    let error = {}\n\n    const section_pattern = /^[A-Z]$/;\n    const cgpa_pattern = /^([1-9]|10)(\\.\\d{1,2})?$/;\n    const phno_pattern = /^[6-9]\\d{9}$/;\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    \n    if (values.fname === \"\"){\n        error.fname = \"*Field should not be empty\"\n    }\n\n    else {\n        error.fname =\"\"\n    }\n\n    if (values.lname === \"\"){\n        error.lname = \"*Field should not be empty\"\n    }\n\n    else {\n        error.lname =\"\"\n    }\n\n    if (values.srn === \"\"){\n        error.srn = \"*Field should not be empty\"\n    }\n\n    else {\n        error.srn =\"\"\n    }\n\n    if (values.semester === \"\"){\n        error.semester = \"*Field should not be empty\"\n    }\n\n    else {\n        error.semester =\"\"\n    }\n\n    if (values.section === \"\"){\n        error.section = \"*Field should not be empty\"\n    }\n\n    else if (!section_pattern.test(values.section)){\n        error.section = \"*Section didn't match\"\n    }\n\n    else {\n        error.section =\"\"\n    }\n\n    if (values.cgpa === \"\"){\n        error.cgpa = \"*Field should not be empty\"\n    }\n\n    else if (!cgpa_pattern.test(values.cgpa)){\n        error.cgpa = \"*CGPA didn't match\"\n    }\n\n    else {\n        error.cgpa =\"\"\n    }\n\n    if (values.phno === \"\"){\n        error.phno = \"*Field should not be empty\"\n    }\n\n    else if (!phno_pattern.test(values.phno)){\n        error.phno = \"*Phone number didn't match\"\n    }\n\n    else {\n        error.phno =\"\"\n    }\n\n    if (values.email === \"\"){\n        error.email = \"*Field should not be empty\"\n    }\n\n    else if (!email_pattern.test(values.email)){\n        error.email = \"*Email didn't match\"\n    }\n\n    else {\n        error.email =\"\"\n    }\n\n    if (values.password === \"\"){\n        error.password = \"*Field should not be empty\"\n    }\n\n    else {\n        error.password =\"\"\n    }\n\n    return error;\n}\n\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,MAAMC,eAAe,GAAG,SAAS;EACjC,MAAMC,YAAY,GAAG,0BAA0B;EAC/C,MAAMC,YAAY,GAAG,cAAc;EACnC,MAAMC,aAAa,GAAG,4BAA4B;EAElD,IAAIL,MAAM,CAACM,KAAK,KAAK,EAAE,EAAC;IACpBL,KAAK,CAACK,KAAK,GAAG,4BAA4B;EAC9C,CAAC,MAEI;IACDL,KAAK,CAACK,KAAK,GAAE,EAAE;EACnB;EAEA,IAAIN,MAAM,CAACO,KAAK,KAAK,EAAE,EAAC;IACpBN,KAAK,CAACM,KAAK,GAAG,4BAA4B;EAC9C,CAAC,MAEI;IACDN,KAAK,CAACM,KAAK,GAAE,EAAE;EACnB;EAEA,IAAIP,MAAM,CAACQ,GAAG,KAAK,EAAE,EAAC;IAClBP,KAAK,CAACO,GAAG,GAAG,4BAA4B;EAC5C,CAAC,MAEI;IACDP,KAAK,CAACO,GAAG,GAAE,EAAE;EACjB;EAEA,IAAIR,MAAM,CAACS,QAAQ,KAAK,EAAE,EAAC;IACvBR,KAAK,CAACQ,QAAQ,GAAG,4BAA4B;EACjD,CAAC,MAEI;IACDR,KAAK,CAACQ,QAAQ,GAAE,EAAE;EACtB;EAEA,IAAIT,MAAM,CAACU,OAAO,KAAK,EAAE,EAAC;IACtBT,KAAK,CAACS,OAAO,GAAG,4BAA4B;EAChD,CAAC,MAEI,IAAI,CAACR,eAAe,CAACS,IAAI,CAACX,MAAM,CAACU,OAAO,CAAC,EAAC;IAC3CT,KAAK,CAACS,OAAO,GAAG,uBAAuB;EAC3C,CAAC,MAEI;IACDT,KAAK,CAACS,OAAO,GAAE,EAAE;EACrB;EAEA,IAAIV,MAAM,CAACY,IAAI,KAAK,EAAE,EAAC;IACnBX,KAAK,CAACW,IAAI,GAAG,4BAA4B;EAC7C,CAAC,MAEI,IAAI,CAACT,YAAY,CAACQ,IAAI,CAACX,MAAM,CAACY,IAAI,CAAC,EAAC;IACrCX,KAAK,CAACW,IAAI,GAAG,oBAAoB;EACrC,CAAC,MAEI;IACDX,KAAK,CAACW,IAAI,GAAE,EAAE;EAClB;EAEA,IAAIZ,MAAM,CAACa,IAAI,KAAK,EAAE,EAAC;IACnBZ,KAAK,CAACY,IAAI,GAAG,4BAA4B;EAC7C,CAAC,MAEI,IAAI,CAACT,YAAY,CAACO,IAAI,CAACX,MAAM,CAACa,IAAI,CAAC,EAAC;IACrCZ,KAAK,CAACY,IAAI,GAAG,4BAA4B;EAC7C,CAAC,MAEI;IACDZ,KAAK,CAACY,IAAI,GAAE,EAAE;EAClB;EAEA,IAAIb,MAAM,CAACc,KAAK,KAAK,EAAE,EAAC;IACpBb,KAAK,CAACa,KAAK,GAAG,4BAA4B;EAC9C,CAAC,MAEI,IAAI,CAACT,aAAa,CAACM,IAAI,CAACX,MAAM,CAACc,KAAK,CAAC,EAAC;IACvCb,KAAK,CAACa,KAAK,GAAG,qBAAqB;EACvC,CAAC,MAEI;IACDb,KAAK,CAACa,KAAK,GAAE,EAAE;EACnB;EAEA,IAAId,MAAM,CAACe,QAAQ,KAAK,EAAE,EAAC;IACvBd,KAAK,CAACc,QAAQ,GAAG,4BAA4B;EACjD,CAAC,MAEI;IACDd,KAAK,CAACc,QAAQ,GAAE,EAAE;EACtB;EAEA,OAAOd,KAAK;AAChB;AAACe,EAAA,GAjGQjB,UAAU;AAmGnB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}