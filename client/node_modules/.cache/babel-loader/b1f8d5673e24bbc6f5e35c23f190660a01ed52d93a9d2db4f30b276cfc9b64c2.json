{"ast":null,"code":"function Validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (values.club === \"\") {\n    error.club = \"*Field should not be empty\";\n  } else {\n    error.club = \"\";\n  }\n  if (values.dept === \"\") {\n    error.dept = \"*Field should not be empty\";\n  } else {\n    error.dept = \"\";\n  }\n  if (values.bio === \"\") {\n    error.bio = \"*Field should not be empty\";\n  } else {\n    error.bio = \"\";\n  }\n  if (values.email === \"\") {\n    error.email = \"*Field should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"*Email didn't match\";\n  } else {\n    error.email = \"\";\n  }\n  if (values.password === \"\") {\n    error.password = \"*Field should not be empty\";\n  } else {\n    error.password = \"\";\n  }\n  if (values.repassword === \"\") {\n    error.repassword = \"*Field should not be empty\";\n  } else {\n    error.repassword = \"\";\n  }\n  return error;\n}\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["Validation","values","error","email_pattern","club","dept","bio","email","test","password","repassword","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/planner/client/src/components/signup/club_signup/ClubSignupValidation.js"],"sourcesContent":["function Validation(values) {\n    let error = {}\n\n    const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    \n    if (values.club === \"\"){\n        error.club = \"*Field should not be empty\"\n    }\n\n    else {\n        error.club =\"\"\n    }\n\n    if (values.dept === \"\"){\n        error.dept = \"*Field should not be empty\"\n    }\n\n    else {\n        error.dept =\"\"\n    }\n\n    if (values.bio === \"\"){\n        error.bio = \"*Field should not be empty\"\n    }\n\n    else {\n        error.bio =\"\"\n    }\n\n    if (values.email === \"\"){\n        error.email = \"*Field should not be empty\"\n    }\n\n    else if (!email_pattern.test(values.email)){\n        error.email = \"*Email didn't match\"\n    }\n\n    else {\n        error.email =\"\"\n    }\n\n    if (values.password === \"\"){\n        error.password = \"*Field should not be empty\"\n    }\n\n    else {\n        error.password =\"\"\n    }\n\n    if (values.repassword === \"\"){\n        error.repassword = \"*Field should not be empty\"\n    }\n\n    else {\n        error.repassword =\"\"\n    }\n\n    return error;\n}\n\nexport default Validation;"],"mappings":"AAAA,SAASA,UAAUA,CAACC,MAAM,EAAE;EACxB,IAAIC,KAAK,GAAG,CAAC,CAAC;EAEd,MAAMC,aAAa,GAAG,4BAA4B;EAElD,IAAIF,MAAM,CAACG,IAAI,KAAK,EAAE,EAAC;IACnBF,KAAK,CAACE,IAAI,GAAG,4BAA4B;EAC7C,CAAC,MAEI;IACDF,KAAK,CAACE,IAAI,GAAE,EAAE;EAClB;EAEA,IAAIH,MAAM,CAACI,IAAI,KAAK,EAAE,EAAC;IACnBH,KAAK,CAACG,IAAI,GAAG,4BAA4B;EAC7C,CAAC,MAEI;IACDH,KAAK,CAACG,IAAI,GAAE,EAAE;EAClB;EAEA,IAAIJ,MAAM,CAACK,GAAG,KAAK,EAAE,EAAC;IAClBJ,KAAK,CAACI,GAAG,GAAG,4BAA4B;EAC5C,CAAC,MAEI;IACDJ,KAAK,CAACI,GAAG,GAAE,EAAE;EACjB;EAEA,IAAIL,MAAM,CAACM,KAAK,KAAK,EAAE,EAAC;IACpBL,KAAK,CAACK,KAAK,GAAG,4BAA4B;EAC9C,CAAC,MAEI,IAAI,CAACJ,aAAa,CAACK,IAAI,CAACP,MAAM,CAACM,KAAK,CAAC,EAAC;IACvCL,KAAK,CAACK,KAAK,GAAG,qBAAqB;EACvC,CAAC,MAEI;IACDL,KAAK,CAACK,KAAK,GAAE,EAAE;EACnB;EAEA,IAAIN,MAAM,CAACQ,QAAQ,KAAK,EAAE,EAAC;IACvBP,KAAK,CAACO,QAAQ,GAAG,4BAA4B;EACjD,CAAC,MAEI;IACDP,KAAK,CAACO,QAAQ,GAAE,EAAE;EACtB;EAEA,IAAIR,MAAM,CAACS,UAAU,KAAK,EAAE,EAAC;IACzBR,KAAK,CAACQ,UAAU,GAAG,4BAA4B;EACnD,CAAC,MAEI;IACDR,KAAK,CAACQ,UAAU,GAAE,EAAE;EACxB;EAEA,OAAOR,KAAK;AAChB;AAACS,EAAA,GA1DQX,UAAU;AA4DnB,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}