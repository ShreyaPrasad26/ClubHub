{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/planner/client/src/components/profile/student_profile/StudentProfile.jsx\",\n  _s = $RefreshSig$();\n/*\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\n\nconst StudentProfile = () => {\n  const { srn } = useParams();\n\n  const [studentData, setStudentData] = useState([]);\n  const [aboutData, setAboutData] = useState({\n    mailId: '',\n    phoneNumber: '',\n    cgpa: '',\n    semester: '',\n    section: '',\n  });\n  const [clubData, setClubData] = useState({\n    clubName: '',\n    designation: '',\n  });\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\n  const [isEditingClub, setIsEditingClub] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + srn);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleInputChangeAbout = (e) => {\n    const { name, value } = e.target;\n    setAboutData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleInputChange = (e, section) => {\n    const { name, value } = e.target;\n    if (section === 'about') {\n      setAboutData((prevData) => ({ ...prevData, [name]: value }));\n    } else if (section === 'club') {\n      setClubData((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e, section) => {\n    e.preventDefault();\n    // Add logic here to update the data using axios or any other method\n    if (section === 'about') {\n      setIsEditingAbout(false);\n    } else if (section === 'club') {\n      setIsEditingClub(false);\n    }\n  };\n\n  const handleEdit = (section) => {\n    if (section === 'about') {\n      setIsEditingAbout(true);\n    } else if (section === 'club') {\n      setIsEditingClub(true);\n    }\n  };\n\n  return (\n    <>\n      <StudentHeading />\n      <div className='profile-banner'>\n        <div className='profile-image'></div>\n        {studentData.map((srn, index) => (\n          <div className='profile-heading' key={index}>\n            <p className='profile-title-1'>{srn.fname} {srn.lname}</p>\n            <p className='profile-student-srn'>{srn.srn}</p>\n          </div>\n        ))}\n      </div>\n      <div className='student-profile-details'>\n        <div className='student-about'>\n          <p className='profile-title'>About</p>\n          <div className='profile-section-rect'>\n            {studentData.map((srn, index) => (\n              <div className='profile-about-content' key={index}>\n                {!isEditingAbout ? (\n                  <>\n                    <p>Mail ID: {srn.email}</p>\n                    <p>Phone number: {srn.phno}</p>\n                    <p>CGPA: {srn.cgpa}</p>\n                    <p>Semester: {srn.semester}</p>\n                    <p>Section: {srn.section}</p>\n                    <button onClick={() => handleEdit('about')}>Edit</button>\n                  </>\n                ) : (\n                  <form onSubmit={(e) => handleSubmit(e, 'about')}>\n                    <label>\n                      Mail ID:\n                      <input\n                        type=\"email\"\n                        name=\"mailId\"\n                        value={aboutData.mailId}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Phone number:\n                      <input\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        value={aboutData.phoneNumber}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      CGPA:\n                      <input\n                        type=\"text\"\n                        name=\"cgpa\"\n                        value={aboutData.cgpa}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Semester:\n                      <input\n                        type=\"text\"\n                        name=\"semester\"\n                        value={aboutData.semester}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Section:\n                      <input\n                        type=\"text\"\n                        name=\"section\"\n                        value={aboutData.section}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <button type=\"submit\">Submit</button>\n                  </form>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className='student-about'>\n          <p className='profile-title'>Club Membership</p>\n          <div className='profile-section-rect'>\n            {!isEditingClub ? (\n              <div>\n                <p>\n                  Club Name: {clubData.clubName}\n                </p>\n                <p>\n                  Designation: {clubData.designation}\n                </p>\n                <button onClick={() => handleEdit('club')}>Edit</button>\n              </div>\n            ) : (\n              <form onSubmit={(e) => handleSubmit(e, 'club')}>\n                <label>\n                  Club Name:\n                  <input\n                    type=\"text\"\n                    name=\"clubName\"\n                    value={clubData.clubName}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <label>\n                  Designation:\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={clubData.designation}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default StudentProfile;\n\n/*\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\n\nconst StudentProfile = () => {\n  const { srn } = useParams();\n\n  const [studentData, setStudentData] = useState([]);\n  const [aboutData, setAboutData] = useState({\n    mailId: '',\n    phoneNumber: '',\n    cgpa: '',\n    semester: '',\n    section: '',\n  });\n  const [clubData, setClubData] = useState({\n    clubName: '',\n    designation: '',\n  });\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\n  const [isEditingClub, setIsEditingClub] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + srn);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleInputChangeAbout = (e) => {\n    const { name, value } = e.target;\n    setAboutData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleInputChange = (e, section) => {\n    const { name, value } = e.target;\n    if (section === 'about') {\n      setAboutData((prevData) => ({ ...prevData, [name]: value }));\n    } else if (section === 'club') {\n      setClubData((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e, section) => {\n    e.preventDefault();\n    // Add logic here to update the data using axios or any other method\n    if (section === 'about') {\n      setIsEditingAbout(false);\n    } else if (section === 'club') {\n      setIsEditingClub(false);\n    }\n  };\n\n  const handleEdit = (section) => {\n    if (section === 'about') {\n      setIsEditingAbout(true);\n    } else if (section === 'club') {\n      setIsEditingClub(true);\n    }\n  };\n\n  return (\n    <>\n      <StudentHeading />\n      <div className='profile-banner'>\n        <div className='profile-image'></div>\n        {studentData.map((student, index) => (\n          <div className='profile-heading' key={index}>\n            <p className='profile-title-1'>{student.fname} {student.lname}</p>\n            <p className='profile-student-srn'>{student.srn}</p>\n          </div>\n        ))}\n      </div>\n      <div className='student-profile-details'>\n        <div className='student-about'>\n          <p className='profile-title'>About</p>\n          <div className='profile-section-rect'>\n            {studentData.map((student, index) => (\n              <div className='profile-about-content' key={index}>\n                {!isEditingAbout ? (\n                  <>\n                    <p>Mail ID: {student.email}</p>\n                    <p>Phone number: {student.phno}</p>\n                    <p>CGPA: {student.cgpa}</p>\n                    <p>Semester: {student.semester}</p>\n                    <p>Section: {student.section}</p>\n                    <button onClick={() => handleEdit('about')}>Edit</button>\n                  </>\n                ) : (\n                  <form onSubmit={(e) => handleSubmit(e, 'about')}>\n                    <label>\n                      Mail ID:\n                      <input\n                        type=\"email\"\n                        name=\"mailId\"\n                        value={aboutData.mailId}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Phone number:\n                      <input\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        value={aboutData.phoneNumber}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      CGPA:\n                      <input\n                        type=\"text\"\n                        name=\"cgpa\"\n                        value={aboutData.cgpa}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Semester:\n                      <input\n                        type=\"text\"\n                        name=\"semester\"\n                        value={aboutData.semester}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Section:\n                      <input\n                        type=\"text\"\n                        name=\"section\"\n                        value={aboutData.section}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <button type=\"submit\">Submit</button>\n                  </form>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className='student-about'>\n          <p className='profile-title'>Club Membership</p>\n          <div className='profile-section-rect'>\n            {!isEditingClub ? (\n              <div>\n                <p>\n                  Club Name: {clubData.clubName}\n                </p>\n                <p>\n                  Designation: {clubData.designation}\n                </p>\n                <button onClick={() => handleEdit('club')}>Edit</button>\n              </div>\n            ) : (\n              <form onSubmit={(e) => handleSubmit(e, 'club')}>\n                <label>\n                  Club Name:\n                  <input\n                    type=\"text\"\n                    name=\"clubName\"\n                    value={clubData.clubName}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <label>\n                  Designation:\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={clubData.designation}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default \n*/\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentProfile = () => {\n  _s();\n  const {\n    email\n  } = useParams();\n  const [studentData, setStudentData] = useState([]);\n  const [formData, setFormData] = useState({\n    clubName: '',\n    designation: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + email);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsEditing(false);\n  };\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StudentHeading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), studentData.map((student, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-title-1\",\n          children: [student.fname, \" \", student.lname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-student-srn\",\n          children: student.srn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-profile-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-about\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-title\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-section-rect\",\n          children: studentData.map((student, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-about-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Mail ID: \", student.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Phone number: \", student.phno]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"CGPA: \", student.cgpa]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Semester: \", student.semester]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Section: \", student.section]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"student-about\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile-title\",\n          children: \"Club Membership\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-section-rect\",\n          children: !isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Club Name: \", formData.clubName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Designation: \", formData.designation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Club Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"clubName\",\n                value: formData.clubName,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Designation:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"designation\",\n                value: formData.designation,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StudentProfile, \"0H8pLfoBTBcWHu6OAU9cHvEHZpk=\", false, function () {\n  return [useParams];\n});\n_c = StudentProfile;\nexport default StudentProfile;\nvar _c;\n$RefreshReg$(_c, \"StudentProfile\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","StudentHeading","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentProfile","_s","email","studentData","setStudentData","formData","setFormData","clubName","designation","isEditing","setIsEditing","fetchData","studentDetails","get","data","error","console","handleInputChange","e","name","value","target","prevData","handleSubmit","preventDefault","handleEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","student","index","fname","lname","srn","phno","cgpa","semester","section","onClick","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/planner/client/src/components/profile/student_profile/StudentProfile.jsx"],"sourcesContent":["/*\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\n\nconst StudentProfile = () => {\n  const { srn } = useParams();\n\n  const [studentData, setStudentData] = useState([]);\n  const [aboutData, setAboutData] = useState({\n    mailId: '',\n    phoneNumber: '',\n    cgpa: '',\n    semester: '',\n    section: '',\n  });\n  const [clubData, setClubData] = useState({\n    clubName: '',\n    designation: '',\n  });\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\n  const [isEditingClub, setIsEditingClub] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + srn);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleInputChangeAbout = (e) => {\n    const { name, value } = e.target;\n    setAboutData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleInputChange = (e, section) => {\n    const { name, value } = e.target;\n    if (section === 'about') {\n      setAboutData((prevData) => ({ ...prevData, [name]: value }));\n    } else if (section === 'club') {\n      setClubData((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e, section) => {\n    e.preventDefault();\n    // Add logic here to update the data using axios or any other method\n    if (section === 'about') {\n      setIsEditingAbout(false);\n    } else if (section === 'club') {\n      setIsEditingClub(false);\n    }\n  };\n\n  const handleEdit = (section) => {\n    if (section === 'about') {\n      setIsEditingAbout(true);\n    } else if (section === 'club') {\n      setIsEditingClub(true);\n    }\n  };\n\n  return (\n    <>\n      <StudentHeading />\n      <div className='profile-banner'>\n        <div className='profile-image'></div>\n        {studentData.map((srn, index) => (\n          <div className='profile-heading' key={index}>\n            <p className='profile-title-1'>{srn.fname} {srn.lname}</p>\n            <p className='profile-student-srn'>{srn.srn}</p>\n          </div>\n        ))}\n      </div>\n      <div className='student-profile-details'>\n        <div className='student-about'>\n          <p className='profile-title'>About</p>\n          <div className='profile-section-rect'>\n            {studentData.map((srn, index) => (\n              <div className='profile-about-content' key={index}>\n                {!isEditingAbout ? (\n                  <>\n                    <p>Mail ID: {srn.email}</p>\n                    <p>Phone number: {srn.phno}</p>\n                    <p>CGPA: {srn.cgpa}</p>\n                    <p>Semester: {srn.semester}</p>\n                    <p>Section: {srn.section}</p>\n                    <button onClick={() => handleEdit('about')}>Edit</button>\n                  </>\n                ) : (\n                  <form onSubmit={(e) => handleSubmit(e, 'about')}>\n                    <label>\n                      Mail ID:\n                      <input\n                        type=\"email\"\n                        name=\"mailId\"\n                        value={aboutData.mailId}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Phone number:\n                      <input\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        value={aboutData.phoneNumber}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      CGPA:\n                      <input\n                        type=\"text\"\n                        name=\"cgpa\"\n                        value={aboutData.cgpa}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Semester:\n                      <input\n                        type=\"text\"\n                        name=\"semester\"\n                        value={aboutData.semester}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Section:\n                      <input\n                        type=\"text\"\n                        name=\"section\"\n                        value={aboutData.section}\n                        onChange={handleInputChangeAbout}\n                        \n                      />\n                    </label>\n                    <br />\n                    <button type=\"submit\">Submit</button>\n                  </form>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className='student-about'>\n          <p className='profile-title'>Club Membership</p>\n          <div className='profile-section-rect'>\n            {!isEditingClub ? (\n              <div>\n                <p>\n                  Club Name: {clubData.clubName}\n                </p>\n                <p>\n                  Designation: {clubData.designation}\n                </p>\n                <button onClick={() => handleEdit('club')}>Edit</button>\n              </div>\n            ) : (\n              <form onSubmit={(e) => handleSubmit(e, 'club')}>\n                <label>\n                  Club Name:\n                  <input\n                    type=\"text\"\n                    name=\"clubName\"\n                    value={clubData.clubName}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <label>\n                  Designation:\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={clubData.designation}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default StudentProfile;\n\n/*\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading';\nimport axios from 'axios';\n\nconst StudentProfile = () => {\n  const { srn } = useParams();\n\n  const [studentData, setStudentData] = useState([]);\n  const [aboutData, setAboutData] = useState({\n    mailId: '',\n    phoneNumber: '',\n    cgpa: '',\n    semester: '',\n    section: '',\n  });\n  const [clubData, setClubData] = useState({\n    clubName: '',\n    designation: '',\n  });\n  const [isEditingAbout, setIsEditingAbout] = useState(false);\n  const [isEditingClub, setIsEditingClub] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + srn);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleInputChangeAbout = (e) => {\n    const { name, value } = e.target;\n    setAboutData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleInputChange = (e, section) => {\n    const { name, value } = e.target;\n    if (section === 'about') {\n      setAboutData((prevData) => ({ ...prevData, [name]: value }));\n    } else if (section === 'club') {\n      setClubData((prevData) => ({ ...prevData, [name]: value }));\n    }\n  };\n\n  const handleSubmit = (e, section) => {\n    e.preventDefault();\n    // Add logic here to update the data using axios or any other method\n    if (section === 'about') {\n      setIsEditingAbout(false);\n    } else if (section === 'club') {\n      setIsEditingClub(false);\n    }\n  };\n\n  const handleEdit = (section) => {\n    if (section === 'about') {\n      setIsEditingAbout(true);\n    } else if (section === 'club') {\n      setIsEditingClub(true);\n    }\n  };\n\n  return (\n    <>\n      <StudentHeading />\n      <div className='profile-banner'>\n        <div className='profile-image'></div>\n        {studentData.map((student, index) => (\n          <div className='profile-heading' key={index}>\n            <p className='profile-title-1'>{student.fname} {student.lname}</p>\n            <p className='profile-student-srn'>{student.srn}</p>\n          </div>\n        ))}\n      </div>\n      <div className='student-profile-details'>\n        <div className='student-about'>\n          <p className='profile-title'>About</p>\n          <div className='profile-section-rect'>\n            {studentData.map((student, index) => (\n              <div className='profile-about-content' key={index}>\n                {!isEditingAbout ? (\n                  <>\n                    <p>Mail ID: {student.email}</p>\n                    <p>Phone number: {student.phno}</p>\n                    <p>CGPA: {student.cgpa}</p>\n                    <p>Semester: {student.semester}</p>\n                    <p>Section: {student.section}</p>\n                    <button onClick={() => handleEdit('about')}>Edit</button>\n                  </>\n                ) : (\n                  <form onSubmit={(e) => handleSubmit(e, 'about')}>\n                    <label>\n                      Mail ID:\n                      <input\n                        type=\"email\"\n                        name=\"mailId\"\n                        value={aboutData.mailId}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Phone number:\n                      <input\n                        type=\"text\"\n                        name=\"phoneNumber\"\n                        value={aboutData.phoneNumber}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      CGPA:\n                      <input\n                        type=\"text\"\n                        name=\"cgpa\"\n                        value={aboutData.cgpa}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Semester:\n                      <input\n                        type=\"text\"\n                        name=\"semester\"\n                        value={aboutData.semester}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <label>\n                      Section:\n                      <input\n                        type=\"text\"\n                        name=\"section\"\n                        value={aboutData.section}\n                        onChange={handleInputChangeAbout}\n                        required\n                      />\n                    </label>\n                    <br />\n                    <button type=\"submit\">Submit</button>\n                  </form>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className='student-about'>\n          <p className='profile-title'>Club Membership</p>\n          <div className='profile-section-rect'>\n            {!isEditingClub ? (\n              <div>\n                <p>\n                  Club Name: {clubData.clubName}\n                </p>\n                <p>\n                  Designation: {clubData.designation}\n                </p>\n                <button onClick={() => handleEdit('club')}>Edit</button>\n              </div>\n            ) : (\n              <form onSubmit={(e) => handleSubmit(e, 'club')}>\n                <label>\n                  Club Name:\n                  <input\n                    type=\"text\"\n                    name=\"clubName\"\n                    value={clubData.clubName}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <label>\n                  Designation:\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={clubData.designation}\n                    onChange={(e) => handleInputChange(e, 'club')}\n                    required\n                  />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default \n*/\n\nimport React,  { useEffect, useState } from 'react'\nimport {Link, useParams} from 'react-router-dom'\nimport './studentprofile.css';\nimport StudentHeading from '../../common/heading/studentheading/StudentHeading'\nimport axios from 'axios';\n\nconst StudentProfile = () => {\n    const { email } = useParams();\n\n  const [studentData, setStudentData] = useState([]);\n  const [formData, setFormData] = useState({\n    clubName: '',\n    designation: '',\n  });\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const studentDetails = await axios.get('http://localhost:8081/student/' + email);\n      setStudentData(studentDetails.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsEditing(false);\n  };\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  return (\n    <>\n      <StudentHeading />\n      <div className='profile-banner'>\n        <div className='profile-image'></div>\n        {studentData.map((student, index) => (\n          <div className='profile-heading' key={index}>\n            <p className='profile-title-1'>{student.fname} {student.lname}</p>\n            <p className='profile-student-srn'>{student.srn}</p>\n          </div>\n        ))}\n      </div>\n      <div className='student-profile-details'>\n        <div className='student-about'>\n          <p className='profile-title'>About</p>\n          <div className='profile-section-rect'>\n            {studentData.map((student, index) => (\n              <div className='profile-about-content' key={index}>\n                <p>Mail ID: {student.email}</p>\n                <p>Phone number: {student.phno}</p>\n                <p>CGPA: {student.cgpa}</p>\n                <p>Semester: {student.semester}</p>\n                <p>Section: {student.section}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className='student-about'>\n          <p className='profile-title'>Club Membership</p>\n          <div className='profile-section-rect'>\n            {!isEditing ? (\n                \n              <div>\n                <p>\n                  Club Name: {formData.clubName}\n                </p>\n                <p>\n                  Designation: {formData.designation}\n                </p>\n                <button onClick={handleEdit}>Edit</button>\n              </div>\n            ) : (\n              <form onSubmit={handleSubmit}>\n                <label>\n                  Club Name:\n                  <input\n                    type=\"text\"\n                    name=\"clubName\"\n                    value={formData.clubName}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </label>\n                <br />\n                <label>\n                  Designation:\n                  <input\n                    type=\"text\"\n                    name=\"designation\"\n                    value={formData.designation}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </label>\n                <br />\n                <button type=\"submit\">Submit</button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n   \n\nexport default StudentProfile\n"],"mappingsnD,SAAQC,IAAI,EAAEC,SAAS,QAAO,kBAAkB;AAChD,OAAO,sBAAsB;AAC7B,OAAOC,cAAc,MAAM,oDAAoD;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAM,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE/B,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACdqB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,gCAAgC,GAAGX,KAAK,CAAC;MAChFE,cAAc,CAACQ,cAAc,CAACE,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCf,WAAW,CAAEgB,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMG,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBd,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvBf,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA,CAACH,cAAc;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBjC,OAAA;MAAKkC,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7B7B,OAAA;QAAKkC,SAAS,EAAC;MAAe;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACpC3B,WAAW,CAAC6B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9BrC,OAAA;QAAKkC,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC9B7B,OAAA;UAAGkC,SAAS,EAAC,iBAAiB;UAAAL,QAAA,GAAEO,OAAO,CAACE,KAAK,EAAC,GAAC,EAACF,OAAO,CAACG,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClEjC,OAAA;UAAGkC,SAAS,EAAC,qBAAqB;UAAAL,QAAA,EAAEO,OAAO,CAACI;QAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFhBI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGtC,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjC,OAAA;MAAKkC,SAAS,EAAC,yBAAyB;MAAAL,QAAA,gBACtC7B,OAAA;QAAKkC,SAAS,EAAC,eAAe;QAAAL,QAAA,gBAC5B7B,OAAA;UAAGkC,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtCjC,OAAA;UAAKkC,SAAS,EAAC,sBAAsB;UAAAL,QAAA,EAClCvB,WAAW,CAAC6B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9BrC,OAAA;YAAKkC,SAAS,EAAC,uBAAuB;YAAAL,QAAA,gBACpC7B,OAAA;cAAA6B,QAAA,GAAG,WAAS,EAACO,OAAO,CAAC/B,KAAK;YAAA;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/BjC,OAAA;cAAA6B,QAAA,GAAG,gBAAc,EAACO,OAAO,CAACK,IAAI;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnCjC,OAAA;cAAA6B,QAAA,GAAG,QAAM,EAACO,OAAO,CAACM,IAAI;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3BjC,OAAA;cAAA6B,QAAA,GAAG,YAAU,EAACO,OAAO,CAACO,QAAQ;YAAA;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnCjC,OAAA;cAAA6B,QAAA,GAAG,WAAS,EAACO,OAAO,CAACQ,OAAO;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GALSI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAM5C,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNjC,OAAA;QAAKkC,SAAS,EAAC,eAAe;QAAAL,QAAA,gBAC5B7B,OAAA;UAAGkC,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAChDjC,OAAA;UAAKkC,SAAS,EAAC,sBAAsB;UAAAL,QAAA,EAClC,CAACjB,SAAS,gBAETZ,OAAA;YAAA6B,QAAA,gBACE7B,OAAA;cAAA6B,QAAA,GAAG,aACU,EAACrB,QAAQ,CAACE,QAAQ;YAAA;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eACJjC,OAAA;cAAA6B,QAAA,GAAG,eACY,EAACrB,QAAQ,CAACG,WAAW;YAAA;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,eACJjC,OAAA;cAAQ6C,OAAO,EAAEjB,UAAW;cAAAC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,gBAENjC,OAAA;YAAM8C,QAAQ,EAAEpB,YAAa;YAAAG,QAAA,gBAC3B7B,OAAA;cAAA6B,QAAA,GAAO,YAEL,eAAA7B,OAAA;gBACE+C,IAAI,EAAC,MAAM;gBACXzB,IAAI,EAAC,UAAU;gBACfC,KAAK,EAAEf,QAAQ,CAACE,QAAS;gBACzBsC,QAAQ,EAAE5B,iBAAkB;gBAC5B6B,QAAQ;cAAA;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACRjC,OAAA;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNjC,OAAA;cAAA6B,QAAA,GAAO,cAEL,eAAA7B,OAAA;gBACE+C,IAAI,EAAC,MAAM;gBACXzB,IAAI,EAAC,aAAa;gBAClBC,KAAK,EAAEf,QAAQ,CAACG,WAAY;gBAC5BqC,QAAQ,EAAE5B,iBAAkB;gBAC5B6B,QAAQ;cAAA;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACRjC,OAAA;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNjC,OAAA;cAAQ+C,IAAI,EAAC,QAAQ;cAAAlB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC;QACP;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC7B,EAAA,CA9GID,cAAc;EAAA,QACEP,SAAS;AAAA;AAAAsD,EAAA,GADzB/C,cAAc;AAiHpB,eAAeA,cAAc;AAAA,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}